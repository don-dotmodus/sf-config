# This file is managed by ansible, do not edit directly
---
- pipeline:
    name: check
    description: |
      Newly uploaded patchsets enter this pipeline to receive an
      initial +/-1 Verified vote.
    manager: independent
    require:
      gerrit:
        open: True
        current-patchset: True
    trigger:
      gerrit:
        - event: patchset-created
        - event: change-restored
        - event: comment-added
          comment: (?i)^(Patch Set [0-9]+:)?( [\w\\+-]*)*(\n\n)?\s*(recheck|reverify)
        - event: comment-added
          require-approval:
            - Verified: [-1, -2]
              username: zuul
          approval:
            - Workflow: 1
      github.com:
        - event: pull_request
          action:
            - opened
            - changed
            - reopened
        - event: pull_request
          action: comment
          comment: (?i)^\s*recheck\s*$
    start:
      github.com:
        status: 'pending'
        status-url: "https://sftests.com/zuul/t/local/status/change/{change.number},{change.patchset}"
        comment: false
      gerrit:
        Verified: 0
      mqtt:
        topic: "zuul/{pipeline}/start/{project}/{branch}"
    success:
      github.com:
        status: 'success'
        status-url: "https://sftests.com/zuul/t/local/buildset/{buildset.uuid}"
      gerrit:
        Verified: 1
      sqlreporter:
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"
    failure:
      github.com:
        status: 'failure'
        status-url: "https://sftests.com/zuul/t/local/buildset/{buildset.uuid}"
      gerrit:
        Verified: -1
      sqlreporter:
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"

- pipeline:
    name: gate
    description: |
      Changes that have been approved by core developers are enqueued
      in order in this pipeline, and if they pass tests, will be
      merged.
    success-message: Build succeeded (gate pipeline).
    failure-message: |
      Build failed (gate pipeline).  For information on how to proceed, see
      http://docs.openstack.org/infra/manual/developers.html#automated-testing
    manager: dependent
    precedence: high
    post-review: True
    require:
      gerrit:
        open: True
        current-patchset: True
        approval:
          - Verified: [1, 2]
            username: zuul
          - Workflow: 1
      github.com:
        review:
          # Require an approval from user with write access (e.g. core-reviewer)
          - permission: write
            type: approved
        # Require label
        label: mergeit
        status: "don-dotmodus-sf\\[bot\\]:local/check:success"
        open: True
        current-patchset: True
    trigger:
      gerrit:
        - event: comment-added
          approval:
            - Workflow: 1
        - event: comment-added
          approval:
            - Verified: 1
          username: zuul
      github.com:
        - event: pull_request_review
          action: submitted
          state: approved
        - event: pull_request
          action: comment
          comment: (?i)^\s*regate\s*$
        - event: pull_request_review
          action: dismissed
          state: request_changes
        - event: pull_request
          action: status
          status: "don-dotmodus-sf\\[bot\\]:local/check:success"
        - event: pull_request
          action: labeled
          label:
            - mergeit
    start:
      gerrit:
        Verified: 0
      github.com:
        status: 'pending'
        status-url: "https://sftests.com/zuul/t/local/status/change/{change.number},{change.patchset}"
        comment: false
      mqtt:
        topic: "zuul/{pipeline}/start/{project}/{branch}"
    success:
      gerrit:
        Verified: 2
        submit: true
      github.com:
        status: 'success'
        status-url: "https://sftests.com/zuul/t/local/buildset/{buildset.uuid}"
        merge: true
        comment: true
      sqlreporter:
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"
    failure:
      gerrit:
        Verified: -2
      github.com:
        status: 'failure'
        status-url: "https://sftests.com/zuul/t/local/buildset/{buildset.uuid}"
        comment: true
      sqlreporter:
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"
    window-floor: 20
    window-increase-factor: 2

- pipeline:
    name: post
    post-review: true
    description: This pipeline runs jobs that operate after each change is merged.
    manager: supercedent
    precedence: low
    trigger:
      gerrit:
        - event: ref-updated
          ref: ^refs/heads/.*$
      github.com:
        - event: push
          ref: ^refs/heads/.*$
    start:
      mqtt:
        topic: "zuul/{pipeline}/start/{project}/{branch}"
    success:
      sqlreporter:
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"
    failure:
      smtp:
        from: "zuul@sftests.com"
        to: "root@localhost"
        subject: '[Zuul] Job failed in post pipeline: {change.project}'
      sqlreporter:
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"

- pipeline:
    name: pre-release
    description: When a commit is tagged with a pre-release tag, this pipeline runs jobs that publish archives and documentation.
    manager: independent
    precedence: high
    post-review: True
    trigger:
      gerrit:
        - event: ref-updated
          ref: ^refs/tags/([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9alpha|beta|rc.-]+))?(?:\+([0-9a-zA-Z.-]+))?$
      github.com:
        - event: push
          ref: ^refs/tags/([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9alpha|beta|rc.-]+))?(?:\+([0-9a-zA-Z.-]+))?$
    success:
      sqlreporter:
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"
    failure:
      sqlreporter:
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"
      smtp:
        from: "zuul@sftests.com"
        to: "root@localhost"
        subject: '[Zuul] Job failed in pre-release pipeline: {change.project}'

- pipeline:
    name: release
    post-review: true
    description: When a commit is tagged as a release, this pipeline runs jobs that publish archives and documentation.
    manager: independent
    precedence: high
    trigger:
      gerrit:
        - event: ref-updated
          ref: ^refs/tags/([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9a-zA-Z.-]+))?(?:\+([0-9a-zA-Z.-]+))?$
      github.com:
        - event: push
          ref: ^refs/tags/([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9a-zA-Z.-]+))?(?:\+([0-9a-zA-Z.-]+))?$
    start:
      mqtt:
        topic: "zuul/{pipeline}/start/{project}/{branch}"
    success:
      sqlreporter:
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"
    failure:
      smtp:
        from: "zuul@sftests.com"
        to: "root@localhost"
        subject: '[Zuul] Job failed in release pipeline: {change.project}'
      sqlreporter:
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"

- pipeline:
    name: periodic
    post-review: true
    description: Jobs in this queue are triggered daily.
    manager: independent
    precedence: low
    trigger:
      timer:
        - time: '0 0 * * *'
    start:
      mqtt:
        topic: "zuul/{pipeline}/start/{project}/{branch}"
    success:
      sqlreporter:
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"
    failure:
      smtp:
        from: "zuul@sftests.com"
        to: "root@localhost"
        subject: '[Zuul] Job failed in periodic pipeline: {change.project}'
      sqlreporter:
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"

- pipeline:
    name: experimental
    description: On-demand pipeline for requesting a run against a set of jobs that are not yet gating. Leave review comment of "check experimental" to run jobs in this pipeline.
    success-message: Build succeeded (experimental pipeline).
    failure-message: Build failed (experimental pipeline).
    manager: independent
    precedence: normal
    trigger:
      gerrit:
        - event: comment-added
          comment: (?i)^(Patch Set [0-9]+:)?( [\w\\+-]*)*(\n\n)?\s*check experimental\s*$
      github.com:
        - event: pull_request
          action: comment
          comment: (?i)^\s*check experimental\s*$
    start:
      mqtt:
        topic: "zuul/{pipeline}/start/{project}/{branch}"
    success:
      github.com: {}
      gerrit: {}
      sqlreporter:
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"
    failure:
      github.com: {}
      gerrit: {}
      sqlreporter:
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"

- pipeline:
    name: merge-check
    description: >
      Each time a change merges, this pipeline verifies that all open changes
      on the same project are still mergeable.
    failure-message: Build failed (merge-check pipeline).
    manager: independent
    ignore-dependencies: true
    precedence: low
    trigger: {}
